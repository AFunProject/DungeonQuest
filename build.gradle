buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "gradle.plugin.org.cadixdev.gradle:licenser:0.6.+"
        classpath "com.modrinth.minotaur:Minotaur:2.1.1"
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.cadixdev.licenser'
apply plugin: "com.modrinth.minotaur"
apply plugin: 'org.spongepowered.mixin'

group = 'com.silverminer'
version = '1.0.0-alpha1'

java {
    archivesBaseName = 'dungeon_quest'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

license {
    header = project.file('LICENSE')
    properties {
        name = 'AFunProject'
        year = 2022
    }
}

minecraft {
    mappings channel: 'official', version: '1.18.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                dungeonquest {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                dungeonquest {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dungeon_quest', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dungeonquest {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.1-39.1.0'
}

mixin {
    add sourceSets.main, 'mixins.dungeon_quest.refmap.json'
    config 'mixins.dungeon_quest.json'
    debug.verbose = true
    debug.export = true
    dumpTargetOnFailure = true
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "dungeonquest",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

modrinth {
    token = System.getenv("MODRINTH_TOKEN") // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
    projectId = "6L6MQSXJ"
    versionType = "alpha" // This is the default
    uploadFile = jar // With Fabric Loom or Architectury Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.18.1"] // Must be an array, even with only one version
}